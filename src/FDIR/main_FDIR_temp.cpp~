#include <iostream>
#include <string>
#include <signal.h>
#include <netinet/in.h>
#include <netdb.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <pthread.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>

#include "FDIR.h"

using namespace std;

#include "../ARINC/ARINC_Com.h"

FDIR myFDIR;
 
int  main (int argc,char* argv[]) 
{
	cout << "bonjour je suis le main_FDIR" << endl;

	char s[100];

	if (gethostname(s, 100) != 0) 
	{
    		perror("S-> gethostname");
    		exit(1);
  	}

 	if (leader==False) 
	{
				if (FDIR.Read_Arduino()) 
				{
					nbr_arduino_vide=0;
				}
				else 
				{
					nbr_arduino_vide=nbr_arduino_vide+1;
					if (nbr_arduino_vide>2)
					{
						leader = true;
					}
				}
	}
	if (gethostname(s, 100) != 0) {
		perror("S -> gethostname");
		exit(1);
	}
	cout << "Host Name << s << endl;
	channelReceptionFDIR.Display();
	int i; 
	char buffer[5];
	for (i=0;i<5;i++) buffer[i]='\0';
	int nbr_reboot_plan = 0;
	int nbr_reboot_com = 0;
	while(1) {
		Recu = '';
		QueuingPort channelReceptionFDIR(1,18004,s);
		Recu = channelReceptionFDIR.ReadQueuingMsg(buffer);
		if Recu=='C' //Si Comm en premier
		{
			FDIR.w_com.set();
		Recu = channelReceptionFDIR.ReadQueuingMsg(buffer);
			if Recu=='P'
			{
				FDIR.w_plan.set();
			}
		}
		if Recu=='P' //Si Plan en premier
		{
			FDIR.w_plan.set();
			Recu = channel.ReadQueuingMsg(buffer);
			if Recu=='C'
			{
				FDIR.w_plan.set();
			}
		}
		if (FDIR.w_plan.read()>FDIR.get_mem_plan())
		{
			FDIR.set_mem_plan = FDIR.w_plan.read();
			nbr_reboot_plan = 0;
		}
		else
		{
			///redémarrage de la partition à faire
			nbr_reboot_plan = nbr_reboot_plan+1;
		}

		if (FDIR.w_com.read()>FDIR.get_mem_plan())
		{
			FDIR.set_mem_plan = FDIR.w_com.read();
			nbr_reboot_com = 0;			

		}
		else
		{
			///redémarrage de la partition à faire
			nbr_reboot_com = nbr_reboot_com+1;			
		}
		if (nbr_reboot_com>1 || nbr_reboot_plan>1 )
		{
		}
	else
	{
		if(leader)
		{
			FDIR.Set_Arduino();
		}
	}
	return 0;
}
